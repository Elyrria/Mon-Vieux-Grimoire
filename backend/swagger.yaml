openapi: 3.0.0
info:
    description: |
        API du site Mon Vieux Grimoire. Ici on retrouvera les diff√©rentes routes pour la r√©cup√©ration/modification/suppression d'un livre. Mais aussi pour l'authentification.
    version: "1.0.0"
    title: Mon Vieux Grimoire API
    contact:
        email: quentindumon352a@gmail.com
    license:
        name: Apache 2.0
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
    # Added by API Auto Mocking Plugin
    - description: SwaggerHub API Auto Mocking
      url: https://virtserver.swaggerhub.com/QUENTINDUMON352A/MonVieuxGrimoire/1.0.0
    - url: "http://localhost:4000"
tags:
    - name: books
      description: Tous √†-propos des livres
    - name: user
      description: Op√©ration √†-propos des utilisateurs
paths:
    /api/books:
        post:
            tags:
                - books
            summary: Ajout d'un nouveau livre üëå
            description: Permet de rajouter un livre dans la base de donn√©es avec les √©l√©ments fourni dans le body de la requ√™te üìñ
            operationId: addBook
            parameters:
                - name: token
                  in: header
                  required: true
                  schema:
                      type: string
            responses:
                "201":
                    description: Livre cr√©√©e ‚úÖ
                "400":
                    description: Requ√™te invalide ‚õîÔ∏è
                "401":
                    description: Droits refus√©s üõëÔ∏è
                "404":
                    description: Livre non trouv√© ü§∑‚Äç‚ôÇ
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                book:
                                    type: string
                                image:
                                    type: string
        get:
            tags:
                - books
            summary: R√©cup√®ration de tous les livres üìö
            description: R√©cup√©ration de tous les livres depuis la base de donn√©es üõú
            operationId: findBooks
            responses:
                "200":
                    description: Op√©ration r√©ussite ‚úÖ
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        userId:
                                            type: string
                                        title:
                                            type: string
                                        author:
                                            type: string
                                        imageUrl:
                                            type: string
                                        year:
                                            type: integer
                                        genre:
                                            type: string
                                        ratings:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    userId:
                                                        type: string
                                                    grade:
                                                        type: number
                                        averageRating:
                                            type: number
                "400":
                    description: Requ√™te invalide ‚ùå
    /api/books/:id:
        get:
            tags:
                - books
            summary: R√©cup√®ration d'un livre avec son id sp√©cifi√© dans les param√®tres de la requ√™te
            operationId: findOneBooks
            responses:
                "200":
                    description: Op√©ration r√©ussite ‚úÖ
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    userId:
                                        type: string
                                    title:
                                        type: string
                                    author:
                                        type: string
                                    imageUrl:
                                        type: string
                                    year:
                                        type: integer
                                    genre:
                                        type: string
                                    ratings:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                userId:
                                                    type: string
                                                grade:
                                                    type: number
                                    averageRating:
                                        type: number

                "400":
                    description: Requ√™te invalide ‚ùå
        put:
            tags:
                - books
            summary: Mise √† jour d'un livre existant ‚ôªÔ∏è
            description: Permet de mettre √† jour le livre sp√©cifi√© dans les param√®tres ‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è de la requ√®te üëå
            operationId: updateBook
            parameters:
                - name: token
                  in: header
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: R√©qu√™te r√©ussie ‚úÖ
                "400":
                    description: Requ√™te invalide ‚õîÔ∏è
                "401":
                    description: Droits refus√©s üõëÔ∏è
                "404":
                    description: Livre non trouv√© ü§∑‚Äç‚ôÇ
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                book:
                                    type: string
                                image:
                                    type: string
        delete:
            tags:
                - books
            summary: Suppression d'un livre üõë
            description: Permet de supprimer un livre avec l'id pass√© en param√®tres ‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è de la requ√™te ‚ùå
            operationId: deleteBook
            parameters:
                - name: token
                  in: header
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: R√©qu√™te r√©ussie ‚úÖ
                "400":
                    description: Requ√™te invalide ‚õîÔ∏è
                "401":
                    description: Droits refus√©s üõëÔ∏è
                "404":
                    description: Livre non trouv√© ü§∑‚Äç‚ôÇ
            security:
                - bearerAuth: []
    /api/books/:id/rating:
        post:
            tags:
                - books
            summary: Atribue une note au livre üìï
            description: Permet d'attribuer une note au livre pass√© en id dans les param√®tres ‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è de la requ√™te üíØ
            operationId: ratingBook
            parameters:
                - name: token
                  in: header
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                userId:
                                    type: string
                                rating:
                                    type: number
            responses:
                "201":
                    description: Note cr√©√©e ‚úÖ
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    userId:
                                        type: string
                                    title:
                                        type: string
                                    author:
                                        type: string
                                    imageUrl:
                                        type: string
                                    year:
                                        type: integer
                                    genre:
                                        type: string
                                    ratings:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                userId:
                                                    type: string
                                                grade:
                                                    type: number
                                    averageRating:
                                        type: number
                "400":
                    description: Requ√™te invalide ‚õîÔ∏è
                "401":
                    description: Droits refus√©s üõëÔ∏è
                "404":
                    description: Livre non trouv√© ü§∑‚Äç‚ôÇ
            security:
                - bearerAuth: []
    /api/books/bestrating:
        get:
            tags:
                - books
            summary: R√©cup√©ration des trois livres les mieux not√©s üìó
            description: Permet de r√©cup√©rer les trois livres ayant la meilleur moyenne üíØ
            operationId: bestRatingBook
            responses:
                "200":
                    description: R√©qu√™te r√©ussie ‚úÖ
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        userId:
                                            type: string
                                        title:
                                            type: string
                                        author:
                                            type: string
                                        imageUrl:
                                            type: string
                                        year:
                                            type: integer
                                        genre:
                                            type: string
                                        ratings:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    userId:
                                                        type: string
                                                    grade:
                                                        type: number
                                        averageRating:
                                            type: number
                "400":
                    description: Requ√™te invalide ‚õîÔ∏è

    /api/auth/signup:
        post:
            tags:
                - user
            summary: Cr√©ation d'utilisateur üë®‚Äçüíª
            description: Route permettant d'enregistrer un utilisateur dans la base de donn√©es avec l'email et le password dans les param√®tres ‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è de la requ√™te üõ£ Ô∏è
            operationId: createUser
            responses:
                "201":
                    description: Utilisateur cr√©√© ‚úÖ
                "400":
                    description: Requ√™te invalide ‚õîÔ∏è
                "500":
                    description: Erreur serveur ‚õîÔ∏è
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
    /api/auth/login:
        post:
            tags:
                - user
            summary: Connexion utilisateur üë®‚Äçüíª
            description: Permet de se connecter et de r√©cup√©rer le token de connexion dans la r√©ponse üëå
            operationId: loginUser
            responses:
                "200":
                    description: Op√©ration r√©ussite ‚úÖ
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    userId:
                                        type: string
                                    token:
                                        type: string
                "401":
                    description: Paire identifiant/mot de passe inccorrecte üõë
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
